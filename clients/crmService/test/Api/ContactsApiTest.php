<?php
/**
 * ContactsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CrmService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ContactsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ContactsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createContactAsync
     *
     * Create a new contact.
     *
     */
    public function testCreateContactAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteContactAsync
     *
     * Delete a contact.
     *
     */
    public function testDeleteContactAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessOwnedIndividualAsync
     *
     * Get a Contact of type Individual by ID.
     *
     */
    public function testGetBusinessOwnedIndividualAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessOwnedIndividualsAsync
     *
     * Get all contacts of type individual.
     *
     */
    public function testGetBusinessOwnedIndividualsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessOwnedIndividualsCountAsync
     *
     * Get all contacts of type individual count.
     *
     */
    public function testGetBusinessOwnedIndividualsCountAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessOwnedOrganizationAsync
     *
     * Get a Contact of type Organization by ID.
     *
     */
    public function testGetBusinessOwnedOrganizationAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessOwnedOrganizationsAsync
     *
     * Get all contacts of type organization.
     *
     */
    public function testGetBusinessOwnedOrganizationsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessOwnedOrganizationsCountAsync
     *
     * Get all contacts of type organization count.
     *
     */
    public function testGetBusinessOwnedOrganizationsCountAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactAsync
     *
     * Get a contact by ID.
     *
     */
    public function testGetContactAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactAvatarAsync
     *
     * Get a contact's avatar.
     *
     */
    public function testGetContactAvatarAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactCartAsync
     *
     * Get a contact's cart.
     *
     */
    public function testGetContactCartAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactProfilesAsync
     *
     * Get a contact's social profiles.
     *
     */
    public function testGetContactProfilesAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactSocialProfileAsync
     *
     * Get a contact's social profile.
     *
     */
    public function testGetContactSocialProfileAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactWalletAsync
     *
     * Get a contact's wallet.
     *
     */
    public function testGetContactWalletAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactsAsync
     *
     * Get all business owned contacts.
     *
     */
    public function testGetContactsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContactsCountAsync
     *
     * Get all business owned contacts count.
     *
     */
    public function testGetContactsCountAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExtendedBusinessOwnedIndividualsAsync
     *
     * Get all contacts of type individual.
     *
     */
    public function testGetExtendedBusinessOwnedIndividualsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExtendedBusinessOwnedOrganizationsAsync
     *
     * Get all contacts of type organization.
     *
     */
    public function testGetExtendedBusinessOwnedOrganizationsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExtendedContactAsync
     *
     * Get a contact by ID.
     *
     */
    public function testGetExtendedContactAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExtendedContactsAsync
     *
     * Get all business owned contacts.
     *
     */
    public function testGetExtendedContactsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIndividualRelatedIndividualsAsync
     *
     * Get individual related individuals.
     *
     */
    public function testGetIndividualRelatedIndividualsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIndividualRelatedOrganizationsAsync
     *
     * Get individual related organizations.
     *
     */
    public function testGetIndividualRelatedOrganizationsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationRelatedIndividualsAsync
     *
     * Get organization related individuals.
     *
     */
    public function testGetOrganizationRelatedIndividualsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationRelatedOrganizationsAsync
     *
     * Get organization related organizations.
     *
     */
    public function testGetOrganizationRelatedOrganizationsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchContactAsync
     *
     * Patch a contact.
     *
     */
    public function testPatchContactAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateContactAsync
     *
     * Update a contact.
     *
     */
    public function testUpdateContactAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateContactAvatarAsync
     *
     * Update a contact's avatar.
     *
     */
    public function testUpdateContactAvatarAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for upsertTenantOntoAnotherTenantContactListAsync
     *
     * Upsert a tenant onto another tenant's contact list.
     *
     */
    public function testUpsertTenantOntoAnotherTenantContactListAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for upsertUserOntoAnotherTenantContactListAsync
     *
     * Upsert a user onto a tenant's contact list.
     *
     */
    public function testUpsertUserOntoAnotherTenantContactListAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
