<?php
/**
 * UserApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * HolderService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.1.4089
 * Contact: support@fenix-alliance.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for countCurrentUserFollowersAsync
     *
     * Count the social profiles that follow the current user.
     *
     */
    public function testCountCurrentUserFollowersAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for countCurrentUserFollowsAsync
     *
     * Count the social profiles that the current user follows.
     *
     */
    public function testCountCurrentUserFollowsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for countCurrentUserNotificationsAsync
     *
     * Count the notifications for the current user.
     *
     */
    public function testCountCurrentUserNotificationsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for countCurrentUserTenantsAsync
     *
     * Count the tenants that the current user is enrolled in.
     *
     */
    public function testCountCurrentUserTenantsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserAddressesAsync
     *
     * Get the list of addresses for the current user.
     *
     */
    public function testGetCurrentUserAddressesAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserAsync
     *
     * Gets the current user.
     *
     */
    public function testGetCurrentUserAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserAvatarAsync
     *
     * Get the current user's avatar.
     *
     */
    public function testGetCurrentUserAvatarAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserCartAsync
     *
     * Get the current user's cart.
     *
     */
    public function testGetCurrentUserCartAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserEnrollmentsAsync
     *
     * Get the list of enrollments for the current user.
     *
     */
    public function testGetCurrentUserEnrollmentsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserEnrollmentsExtendedAsync
     *
     * Get the list of enrollments for the current user.
     *
     */
    public function testGetCurrentUserEnrollmentsExtendedAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserFollowersAsync
     *
     * Get the social profiles that follow the current user.
     *
     */
    public function testGetCurrentUserFollowersAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserFollowsAsync
     *
     * Get the social profiles that the current user follows.
     *
     */
    public function testGetCurrentUserFollowsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserInvitationAsync
     *
     * Get the list of tenant enrollment invitations for the current user.
     *
     */
    public function testGetCurrentUserInvitationAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserNotificationsAsync
     *
     * Get the list of notifications for the current user.
     *
     */
    public function testGetCurrentUserNotificationsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserSettingsAsync
     *
     * Get the settings for the current user.
     *
     */
    public function testGetCurrentUserSettingsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserSocialProfileAsync
     *
     * Get the current user's social profile.
     *
     */
    public function testGetCurrentUserSocialProfileAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserTenantsAsync
     *
     * Get the tenants that the current user is enrolled in.
     *
     */
    public function testGetCurrentUserTenantsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserTenantsExtendedAsync
     *
     * Get the tenants that the current user is enrolled in.
     *
     */
    public function testGetCurrentUserTenantsExtendedAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCurrentUserWalletAsync
     *
     * Get the current user's billing profile.
     *
     */
    public function testGetCurrentUserWalletAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getExtendedCurrentUserAsync
     *
     * Get the current user's extended profile.
     *
     */
    public function testGetExtendedCurrentUserAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTenantEnrollmentAsync
     *
     * Get a single TenantEnrollment by its ID.
     *
     */
    public function testGetTenantEnrollmentAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchCurrentUserAsync
     *
     * Partially update the current user's profile.
     *
     */
    public function testPatchCurrentUserAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAvatarAsync
     *
     * Update the current user's avatar.
     *
     */
    public function testUpdateAvatarAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCurrentUserAsync
     *
     * Update the current user's profile.
     *
     */
    public function testUpdateCurrentUserAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCurrentUserSettingsAsync
     *
     * Update the settings for the current user.
     *
     */
    public function testUpdateCurrentUserSettingsAsync()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
